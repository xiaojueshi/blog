---
import { getLangFromUrl, useTranslations } from "../../i18n/utils";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION, TECHNOLOGY_STACK } from "../../config";
import { getCollection } from "astro:content";

// Ëé∑ÂèñÂΩìÂâçËØ≠Ë®Ä
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Ëé∑ÂèñÊúÄÊñ∞ÁöÑ3ÁØáÂçöÂÆ¢ÊñáÁ´†
const posts = (await getCollection("blog"))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3);

// ËÆæÁΩÆÊ≠£Á°ÆÁöÑËØ≠Ë®ÄÊ†áÁ≠æ
const htmlLang = "en";

// Ëé∑ÂèñÂΩìÂâçËØ≠Ë®ÄÁöÑÁΩëÁ´ôÊ†áÈ¢òÂíåÊèèËø∞
const siteTitle = SITE_TITLE.en;
const siteDescription = SITE_DESCRIPTION.en;
---

<!doctype html>
<html lang={htmlLang}>
  <head>
    <BaseHead title={siteTitle} description={siteDescription} />
  </head>
  <body>
    <Header />
    <main>
      <section class="hero">
        <div class="container">
          <h1>
            <span class="code-style">&lt;</span>{siteTitle}<span
              class="code-style">/&gt;</span
            >
          </h1>
          <p class="subtitle">{t("home.subtitle")}</p>
          <div class="terminal">
            <div class="terminal-header">
              <span class="terminal-button"></span>
              <span class="terminal-button"></span>
              <span class="terminal-button"></span>
              <div class="terminal-title">{t("home.terminal.title")}</div>
            </div>
            <div class="terminal-content">
              <div class="line">
                <span class="prompt">$</span>
                <span class="command">cd {siteTitle}</span>
              </div>
              <div class="line">
                <span class="prompt">$</span>
                <span class="command">cat {t("home.terminal.profile")}</span>
              </div>
              <div class="line output">
                {t("home.terminal.skills")}
              </div>
              <div class="line output">{t("home.terminal.exploration")}</div>
              <div class="line">
                <span class="prompt">$</span>
                <span class="command">ls {t("home.terminal.techStack")}</span>
              </div>
              <div class="line output">
                {
                  TECHNOLOGY_STACK.map((item) => (
                    <span class="tech-tag">{item.name}</span>
                  ))
                }
              </div>
              <div class="line">
                <span class="prompt">$</span>
                <span class="cursor"></span>
              </div>
            </div>
          </div>
        </div>
      </section>

      <section class="features">
        <h2>{t("features.title")}</h2>
        <div class="features-grid">
          <div class="feature-card">
            <div class="feature-icon">üìù</div>
            <h3>{t("features.sharing.title")}</h3>
            <p>{t("features.sharing.desc")}</p>
          </div>
          <div class="feature-card">
            <div class="feature-icon">üé®</div>
            <h3>{t("features.design.title")}</h3>
            <p>{t("features.design.desc")}</p>
          </div>
          <div class="feature-card">
            <div class="feature-icon">üåì</div>
            <h3>{t("features.theme.title")}</h3>
            <p>{t("features.theme.desc")}</p>
          </div>
        </div>
      </section>

      <section class="latest-posts">
        <h2>{t("latest.title")}</h2>
        <div class="posts-grid">
          {
            posts.map((post) => (
              <a href={`/en/blog/${post.id}/`} class="post-card">
                <div class="post-date">
                  {new Date(post.data.pubDate).toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "short",
                    day: "numeric",
                  })}
                </div>
                <h3>{post.data.title}</h3>
                <p>{post.data.description}</p>
                <span class="read-more">{t("latest.readMore")} ‚Üí</span>
              </a>
            ))
          }
        </div>
        <div class="view-all">
          <a href="/en/blog" class="view-all-link">{t("latest.viewAll")} ‚Üí</a>
        </div>
      </section>
    </main>
    <Footer />
  </body>
</html>

<style>
  /* Ëã±ÈõÑÂå∫ÂüüÊ†∑Âºè */
  .hero {
    padding: 4rem 0 2rem;
    text-align: center;
  }

  .container {
    max-width: 800px;
    margin: 0 auto;
  }

  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin-bottom: 0.5rem;
    line-height: 1.2;
  }

  .code-style {
    color: var(--accent);
    font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, monospace;
  }

  .subtitle {
    font-size: 1.5rem;
    color: rgb(var(--gray));
    margin-bottom: 3rem;
  }

  /* ÁªàÁ´ØÊ†∑Âºè */
  .terminal {
    background-color: rgb(var(--syntax-bg));
    border-radius: 8px;
    box-shadow: 0 10px 20px rgba(var(--black), 0.1);
    max-width: 600px;
    margin: 0 auto 3rem;
    text-align: left;
    overflow: hidden;
    border: 1px solid rgb(var(--border));
  }

  .terminal-header {
    background-color: rgb(var(--gray-light));
    padding: 0.6rem 1rem;
    display: flex;
    align-items: center;
    position: relative;
  }

  .terminal-button {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin-right: 6px;
    background-color: rgb(var(--gray));
  }

  .terminal-button:first-child {
    background-color: #ff5f56;
  }

  .terminal-button:nth-child(2) {
    background-color: #ffbd2e;
  }

  .terminal-button:nth-child(3) {
    background-color: #27c93f;
  }

  .terminal-title {
    position: absolute;
    left: 0;
    right: 0;
    text-align: center;
    color: rgb(var(--gray-dark));
    font-size: 0.8rem;
  }

  .terminal-content {
    padding: 1rem;
    font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, monospace;
    font-size: 0.9rem;
    line-height: 1.5;
    color: rgb(var(--syntax-txt));
  }

  .line {
    margin-bottom: 0.5rem;
    display: flex;
  }

  .prompt {
    color: var(--accent);
    margin-right: 0.5rem;
  }

  .command {
    color: rgb(var(--syntax-name));
  }

  .output {
    color: rgb(var(--syntax-val));
    padding-left: 1.5rem;
    flex-wrap: wrap;
  }

  .tech-tag {
    display: inline-flex;
    background-color: rgba(var(--syntax-highlight), 0.5);
    padding: 0.2rem 0.6rem;
    border-radius: 4px;
    margin: 0.25rem;
    color: rgb(var(--syntax-name));
    white-space: nowrap;
    font-size: 0.85em;
  }

  .cursor {
    display: inline-block;
    width: 8px;
    height: 1.2em;
    background-color: rgb(var(--syntax-txt));
    animation: blink 1s infinite;
    vertical-align: middle;
  }

  @keyframes blink {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }

  /* ÁâπÊÄßÂç°ÁâáÊ†∑Âºè */
  .features {
    padding: 3rem 0;
  }

  h2 {
    text-align: center;
    margin-bottom: 2rem;
    font-size: 2rem;
    position: relative;
    display: inline-block;
    left: 50%;
    transform: translateX(-50%);
  }

  h2::after {
    content: "";
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 60%;
    height: 3px;
    background-color: var(--accent);
    left: 50%;
    transform: translateX(-50%);
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  .feature-card {
    background-color: rgb(var(--card-background));
    border-radius: 8px;
    padding: 1.5rem;
    text-align: center;
    box-shadow: var(--box-shadow);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
    border: 1px solid rgb(var(--border));
  }

  .feature-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(var(--gray), 0.15);
  }

  .feature-icon {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }

  h3 {
    font-size: 1.2rem;
    margin-bottom: 0.5rem;
  }

  /* ÊúÄÊñ∞ÊñáÁ´†Ê†∑Âºè */
  .latest-posts {
    padding: 3rem 0;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  .post-card {
    background-color: rgb(var(--card-background));
    border-radius: 8px;
    padding: 1.5rem;
    display: block;
    text-decoration: none;
    color: rgb(var(--gray-dark));
    box-shadow: var(--box-shadow);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
    border: 1px solid rgb(var(--border));
  }

  .post-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(var(--gray), 0.15);
  }

  .post-card h3 {
    margin: 0.5rem 0;
    color: rgb(var(--black));
  }

  .post-date {
    font-size: 0.8rem;
    color: rgb(var(--gray));
  }

  .post-card p {
    margin: 0.5rem 0 1rem;
    font-size: 0.9rem;
    color: rgb(var(--gray-dark));
  }

  .read-more {
    color: var(--accent);
    font-weight: 500;
    font-size: 0.9rem;
  }

  .view-all {
    text-align: center;
    margin-top: 2rem;
  }

  .view-all-link {
    display: inline-block;
    background-color: transparent;
    color: var(--accent);
    padding: 0.5rem 1.5rem;
    border-radius: 4px;
    text-decoration: none;
    font-weight: 500;
    border: 1px solid var(--accent);
    transition:
      background-color 0.3s ease,
      color 0.3s ease;
  }

  .view-all-link:hover {
    background-color: var(--accent);
    color: white;
  }

  /* ÂìçÂ∫îÂºèÊ†∑Âºè */
  @media (max-width: 768px) {
    h1 {
      font-size: 2.5rem;
    }

    .subtitle {
      font-size: 1.2rem;
    }

    .terminal {
      max-width: 90%;
    }

    .features-grid,
    .posts-grid {
      grid-template-columns: 1fr;
    }

    .line.output {
      padding-left: 0.5rem;
    }

    .tech-tag {
      padding: 0.15rem 0.4rem;
      margin: 0.15rem;
      font-size: 0.8em;
    }
  }
</style>
