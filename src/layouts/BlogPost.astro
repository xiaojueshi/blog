---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { Image } from "astro:assets";
import { getLangFromUrl, useTranslations } from "../i18n/utils";
import { AUTHOR } from "../config";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

// 获取当前语言
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// 设置正确的语言标签
const htmlLang = lang === "zh" ? "zh-CN" : "en";

// 获取作者信息
const authorName = lang === "zh" ? AUTHOR.zh : AUTHOR.en;
const authorBio = lang === "zh" ? AUTHOR.bio.zh : AUTHOR.bio.en;
---

<html lang={htmlLang}>
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }
      .author-info {
        display: flex;
        align-items: center;
        margin-top: 2rem;
        padding: 1.5rem;
        background-color: #f8f9fa;
        border-radius: 8px;
      }
      .author-avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        margin-right: 1rem;
        background-color: #e9ecef;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #495057;
        font-weight: bold;
        font-size: 1.5rem;
      }
      .author-details {
        flex: 1;
      }
      .author-name {
        font-weight: bold;
        margin: 0 0 0.5rem 0;
        color: #212529;
      }
      .author-bio {
        margin: 0;
        color: #6c757d;
        font-size: 0.95rem;
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="hero-image">
          {
            heroImage && (
              <Image
                width={1020}
                height={510}
                src={heroImage}
                alt=""
                loading="eager"
              />
            )
          }
        </div>
        <div class="prose">
          <div class="title">
            <div class="date">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    {t("blog.lastUpdated")} <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <h1>{title}</h1>
            <hr />
          </div>
          <slot />

          <!-- 作者信息 -->
          <div class="author-info">
            <div class="author-avatar">
              {authorName.charAt(0)}
            </div>
            <div class="author-details">
              <h3 class="author-name">{authorName}</h3>
              <p class="author-bio">{authorBio}</p>
            </div>
          </div>
        </div>
      </article>
    </main>
    <Footer />

    <!-- 返回顶部按钮 -->
    <button class="back-to-top" aria-label={t("backToTop")}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
      >
        <path d="M12 19V5M5 12l7-7 7 7"></path>
      </svg>
    </button>

    {/* 客户端交互脚本 */}
    <script is:inline>
      document.addEventListener("DOMContentLoaded", () => {
        const backToTop = document.querySelector(".back-to-top");

        window.addEventListener("scroll", () => {
          if (window.scrollY > 300) {
            backToTop.classList.add("show");
          } else {
            backToTop.classList.remove("show");
          }
        });

        backToTop.addEventListener("click", (e) => {
          e.preventDefault();
          window.scrollTo({
            top: 0,
            behavior: "smooth",
          });
        });
      });
    </script>
  </body>
</html>
