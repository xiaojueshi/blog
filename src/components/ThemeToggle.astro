---

---

<div class="theme-toggle-wrapper">
  <theme-toggle>
    <button id="theme-toggle" title="切换主题">
      <!-- 太阳图标 (浅色主题) -->
      <i class="fas fa-sun" id="sun-icon"></i>
      <!-- 月亮图标 (深色主题) -->
      <i class="fas fa-moon" id="moon-icon"></i>
    </button>
  </theme-toggle>
</div>

<style>
  .theme-toggle-wrapper {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
  }

  #theme-toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid rgba(var(--border), 0.3);
    background-color: rgba(var(--card-background), 0.8);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    cursor: pointer;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    transition:
      background-color 0.2s ease,
      border-color 0.2s ease,
      transform 0.2s ease;
  }

  #theme-toggle:hover {
    background-color: rgba(var(--gray), 0.15);
    border-color: rgba(var(--border), 0.5);
    transform: scale(1.05);
  }

  #sun-icon,
  #moon-icon {
    font-size: 1.2rem;
    color: rgb(var(--gray-dark));
    transition:
      transform 0.3s ease,
      opacity 0.3s ease;
  }

  #sun-icon {
    opacity: 0;
    position: absolute;
    transform: scale(0.5);
  }

  #moon-icon {
    opacity: 1;
    transform: scale(1);
  }

  :global([data-theme="dark"]) #sun-icon {
    opacity: 1;
    transform: scale(1);
  }

  :global([data-theme="dark"]) #moon-icon {
    opacity: 0;
    transform: scale(0.5);
  }

  @media (max-width: 768px) {
    .theme-toggle-wrapper {
      bottom: 15px;
      right: 15px;
    }

    #theme-toggle {
      width: 36px;
      height: 36px;
    }
  }
</style>

<script>
  class ThemeToggle extends HTMLElement {
    constructor() {
      super();

      // 初始化主题
      this.initTheme();

      // 添加切换事件
      const toggle = this.querySelector("#theme-toggle");
      toggle?.addEventListener("click", () => this.toggleTheme());
    }

    initTheme() {
      // 检查本地存储中的主题设置
      const storedTheme = localStorage.getItem("theme");

      // 如果有存储的主题设置，使用它
      if (storedTheme) {
        document.documentElement.setAttribute("data-theme", storedTheme);
        return;
      }

      // 否则，检查系统偏好
      const prefersDark = window.matchMedia(
        "(prefers-color-scheme: dark)",
      ).matches;
      document.documentElement.setAttribute(
        "data-theme",
        prefersDark ? "dark" : "light",
      );
    }

    toggleTheme() {
      const currentTheme =
        document.documentElement.getAttribute("data-theme") || "light";
      const newTheme = currentTheme === "light" ? "dark" : "light";

      // 更新DOM
      document.documentElement.setAttribute("data-theme", newTheme);

      // 保存到本地存储
      localStorage.setItem("theme", newTheme);
    }
  }

  // 注册自定义元素
  customElements.define("theme-toggle", ThemeToggle);
</script>
